language: java
sudo: false
dist: xenial
group: edge

addons:
  sonarcloud:
    organization: trellis-ldp

stages:
  - test
  - deploy

services:
  - docker

branches:
  only:
    - master
    # release tags
    - /^trellis-extensions-\d+\.\d+\.\d+$/
    # maintenance branches
    - /^trellis-extensions-\d+\.\d+\.x$/
    # long-lived branches
    - /^branch-.+/

before_script:
  - docker run -p 9042:9042 -p 9160:9160 --name cassandra -d -v "$(pwd)"/buildtools/src/main/resources/cassandra:/init -v "$(pwd)"/cassandra/src/main/resources:/app cassandra:latest
  - docker exec -it cassandra sh -c "/init/initialize.sh /app"

env:
  - JOB=check

jobs:
  allow_failures:
      - env: JOB=sonatype
      - env: JOB=docker
      - env: JOB=aws

  include:
    # JDK 8
    - name: "Java 8"
      stage: test
      jdk: openjdk8
      script: travis_retry ./gradlew check -x pmdMain install jacocoRootReport --continue --scan
      after_success: ./gradlew coveralls sonarqube

    # deploy JDK 8 builds to Sonatype
    - name: "Publish to Sonatype"
      stage: deploy
      jdk: openjdk8
      env: JOB=sonatype
      if: branch = master AND type = push
      # Only automate the publication of SNAPSHOTS
      script: if [[ $(./gradlew -q getVersion) == *SNAPSHOT* ]]; then ./gradlew publish ; fi

    # deploy to Docker hub
    - name: "Publish to Docker hub (trellis-cassandra)"
      stage: deploy
      jdk: openjdk8
      env: JOB=docker
      # Note: adjust this for maintenance branches
      if: (branch = master OR branch =~ /^trellis-extensions-\d+\.\d+\.\d+$/) AND type = push
      install: ./gradlew assemble
      before_script: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      script: ./buildtools/src/main/resources/docker/publishToDockerHub.sh "trellisldp/trellis-cassandra"

    - name: "Publish JavaDocs"
      stage: deploy
      jdk: openjdk8
      env: JOB=aws
      if: branch =~ /^trellis-extensions-\d+\.\d+\.\d+$/ AND type = push
      script: ./gradlew apidocs
      deploy:
          provider: s3
          access_key_id: $AWS_ACCESS_KEY
          secret_access_key: $AWS_SECRET_KEY
          bucket: $AWS_BUCKET
          skip_cleanup: true
          local_dir: docs/apidocs/$(./gradlew -q getVersion)
          upload-dir: docs/trellis-extensions/$(./gradlew -q getVersion)/apidocs
          default_text_charset: 'utf-8'
          on:
              all_branches: true

